_model: page_markdown
---
title: Playing with Google ML APIs and websockets
---
head_extra:

<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@pyconde" />
<meta name="twitter:title" content="Meili Triantafyllidi: Playing with Google ML APIs and websockets" />
<meta name="twitter:description" content="We will first talk about Google Machine Learning APIs (translate, vision, etc) and how to integrate with them. Afterwards we will talk about websockets and Tornado. Then we will have a hands on session where we will integrate a real time websocket application with translation API to build a multilingual chat application, that would solve the Tower of Babel problem.

Requirements:
- Python 3.5+, 
- know how to install requirements." />
<meta name="twitter:image" content="https://de.pycon.org/files/logo.png" />
---
body:

# Playing with Google ML APIs and websockets
<div class="avatar">
![](https://avatars3.githubusercontent.com/u/1010264?s=400&v=4)
**[Meili Triantafyllidi]()** 


Python web dev, PyLadies Berlin organiser that recently attended a websockets talk and Google Developer Days conference and wants to share some of the excitement! 
</div>
## Abstract

*Tags:* Web

We will first talk about Google Machine Learning APIs (translate, vision, etc) and how to integrate with them. Afterwards we will talk about websockets and Tornado. Then we will have a hands on session where we will integrate a real time websocket application with translation API to build a multilingual chat application, that would solve the Tower of Babel problem.

Requirements:
- Python 3.5+, 
- know how to install requirements.


## Description
We will first talk about Google Machine Learning APIs (translate, vision, etc) and how to integrate with them. Afterwards we will talk about websockets and Tornado. Then we will have a hands on session where we will integrate a real time websocket application with translation API to build a multilingual chat application, that would solve the Tower of Babel problem.

Requirements:
- Python 3.5+, 
- know how to install requirements.

Before the session:
- Clone the repo and install the requirements.txt (follow the instructions in the beginning
https://github.com/mei-li/multiling-chat
