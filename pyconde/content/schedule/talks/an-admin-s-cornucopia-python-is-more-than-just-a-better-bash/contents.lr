_model: page_markdown
---
title: An Admin's Cornucopia - Python Is More Than Just A Better Bash
---
video: CQ3qwmld5V8
---
head_extra:

<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@pyconde" />
<meta name="twitter:title" content="Christian Theune: An Admin&#39;s Cornucopia - Python Is More Than Just A Better Bash" />
<meta name="twitter:description" content="Python&#39;s versatility is known to admins - in this talk I&#39;d like to show how it fits for many small and big challenges I meet regularly: from tiny scripts to large systems. Also, I&#39;ll show how using the languages&#39; advanced and/or newer features makes scripts more compact and robust." />
<meta name="twitter:image" content="https://de.pycon.org/files/logo.png" />
---
body:

# An Admin's Cornucopia - Python Is More Than Just A Better Bash
<div class="avatar">
![](https://secure.gravatar.com/avatar/435b78f1a1115c8ebcd00218a40065c4?s=500)
**[Christian Theune]()** ([@theuni](http://twitter.com/theuni))



</div>
## Abstract

*Tags:* python devops

Python's versatility is known to admins - in this talk I'd like to show how it fits for many small and big challenges I meet regularly: from tiny scripts to large systems. Also, I'll show how using the languages' advanced and/or newer features makes scripts more compact and robust.


## Description
*DRAFT* Unfortunately I got sick just a few days before the CFP date, so hopefully you can live with a draft description for now. I'll be happy to update this during or after the review as needed.

I'd like to give a hands-on approach for how to use Python in a mixed environment where you may be writing very small standalone scripts, small integration programs and/or larger systems. As an admin bash is always a very close friend and one quickly uses it and then ends up with large scripts that should never have seen the day of light. Also, admins nowadays might be writing larger software bases that are actual software projects and the lines between "ops" and "devs" are - on purpose - more and more blurry. However, there are some differences in "application development" and "system development". Those are more of a mindset issue, however, and Python as a technology fits in both situations quite well and allows one to transition between those modes rather seamlessly.

I'll be reviewing specific pieces of code from our infrastructure, ranging from smaller scripts to subsystems to a full-born Pyramid application that we use for inventory management. All of those will use different versions of Python, different libraries and different approaches how to solve certain problems. I will likely show how _not_ to do things as well.
