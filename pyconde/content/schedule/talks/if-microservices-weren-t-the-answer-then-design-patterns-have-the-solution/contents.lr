_model: page_markdown
---
title: If Microservices weren't the answer then Design Patterns have the solution.
---
body:

# If Microservices weren't the answer then Design Patterns have the solution.
<div class="avatar">
![](https://secure.gravatar.com/avatar/2cb7e6ecb7a5eebb24007391e9c38928?s=500)
**[Ent]()** ([@last_ent](http://twitter.com/last_ent))



</div>
## Abstract

*Tags:* Python web microservices design patterns Python web microservices design patterns Python web

Microservices are the trend now. However, they are not always the right solution and in hindsight, some services should be merged/combined. What's the proper approach? Design Patterns have you covered! I feel this is quite a common problem we face and this talk will be insightful on how to solve it.


## Description
# Introduction
**Microservices**. Right now they are somewhere between the Trough of Disillusionment & Slope of Enlightenment in the Hype Cycle.

Few reasons you might want to merge a few of your Microservices:

* The complexity inherent in Microservices is not worth the cost.
* You had to split a service into microservices due to constraints and now those constraints are removed. GOTO #1.

In one of my projects, I ended up with #2 and this talk is about how I had to engineer a solution where the two services were combined into one and yet, I had to take care to ensure that they were decoupled enough to let me split them into microservices if the need arises.

Turns out, this is a common problem that spans beyond Microservices and Design Patterns already provides us with ideas on how to solve it.

# Planned Talking Points

### Microservices & the Hype Cycle
*Brief discussion about what are microservices and where it stands in the Hype Cycle*

### (Sometimes) Microservices considered harmful
* These aren't Microservices!
* No more technical constraints

### Refactoring: Microcosm & Macrocosm
* Duplicate functionality & Refactoring
* What are Design Patterns?
* Design Patterns that might help.

### Experience Report
* Did it work?
* Unexpected Challenges

